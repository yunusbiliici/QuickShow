
services:
  backend:
    build: .
    container_name: backend_app
    restart: unless-stopped
    command: npm run dev
    ports:
      - "8080:8080"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules # node_modules'ı host'tan mount etme
    env_file:
      - ./.env
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - backend

  mongo:
    image: mongo:6
    container_name: mongo_rs
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    command: ["--replSet", "rs0"]
    networks:
      - backend
    healthcheck:
      # Bu komut, replica set'in bir PRIMARY üyesi olana kadar bekler.
      # Bu, "ReadConcernMajorityNotAvailableYet" hatasını önler.
      test: |
        echo "try { let status = rs.status(); if (status.ok && status.members.some(m => m.stateStr === 'PRIMARY')) { quit(0); } } catch(e) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo_rs:27017'}]}); } quit(1);" | mongosh --quiet
      interval: 5s
      timeout: 30s
      start_period: 5s
      retries: 5

volumes:
  mongo_data:

networks:
  backend:
